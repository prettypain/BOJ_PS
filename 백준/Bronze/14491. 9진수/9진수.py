'''
진수 변환 문제의 핵심은 해당 진수로 변환했을 때 길이가 핵심이라고 생각된다.
9진수로 예를들어 설명하면

121(9진수)은 각각

(1 * 9**2) + (2 * 9**1) + (1 * 9**0) = 81 + 18 + 1 = 100
이 된다. 즉 10진수로 100, 9진수로 121이란 소리다.
그런데 n을 9진수로 변환할 때 길이를 몰라서 9진수를 뒤에서부터 채운다면
값은 이상해진다(100을 넣으면 무족건적으로 088(9진수)인데 n의 값이 좀 남는다.
즉 n을 최대한 활용해야한다는 소리이다.
그래서 n을 최대한 활용했을 때 9진수의 길이는 어떻게 구하는가?
조금 생각해보면 쉽다.
각 진수의 자리수를 구하는 방법은 알고있다고 가정한다.

n=100일 때를 가정해보자.
i를 0부터 1씩 늘리면서
n이 9**i보다 작은 순간을 찾으면 된다.
그러면 n이 100일때 i는 3이된다.(100을 9진수로 변환하면 121로 3자리다)
즉 n을 9진수로 변환했을 때 i자리수를 갖게된다.(단 n이 1의 자리인 경우는 i는 항상 1)

x * 9**0은 0~9의 값을 갖는다.
x * 9**1은 0~72의 값을 갖는다.
x * 9**2은 0~648의 값을 갖는다.
'''
n =int(input())
i = 0
while True:
    if n<9**i:
        break
    i+=1
if i<=1:
    t = n
else:
    t = ""
    for k in range(i-1, -1, -1): #i = 2 : 1, 0
        for j in range(1, 10):
            if j*9**k>n:
                t += str(j-1)
                if n==0: break
                n%= (j-1)*9**k
                break
print(t)
