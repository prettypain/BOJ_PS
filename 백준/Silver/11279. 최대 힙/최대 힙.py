'''
https://velog.io/@matt2550/파이썬-정렬-필수-heapq
위 링크를 참고해서 문제를 해결했습니다.

원리는 다음과 같다
힙에다가 튜플(tuple)를 원소로 추가하거나 삭제하면,
"튜플 내에서 맨 앞에 있는 값을 기준으로 최소 힙이 구성"되는 원리를 이용한 것인데
간단하게 힙에 있는 모든 값의 -음수 데이터를 원래의 데이터와 튜플로 묶어서 push해준다.


최소 힙은 항상 가장 작은값이 인덱스 0번에 위치한다.
그런데 튜플를 최대힙에 넣는다고 가정해보자
heap = [{a,b}]
라고할 때
최소 힙은 항상 a를 기준으로 가장 작은 값을 인덱스 0에 위치하게한다.
그렇다면 음수의 경우는 어떨까?
절대값이 가장 큰 수가 인덱스 0에 위치하게된다.
그러니까 최소 힙은 그냥 숫자를 넣어서 사용했다면
최소값이 가장 앞으로 이동하는 원리를 이용해서 {최대 힙으로 만들기 위한 수, 수}를 넣어서
최대힙으로 응용이 가능하다는 것이다.

즉
최소 힙의 가장 작은 값이 앞으로 가는 원리와
최소 힙에서 튜플의 경우 인덱스 0를 기준으로 정렬한다는 것
이 두가지를 이용한 것이다.
'''
import sys
import heapq

print = sys.stdout.write
input = sys.stdin.readline
q = []
for i in range(int(input())):
    x = int(input())
    if x>0:
        heapq.heappush(q, (-x, x))
    elif x==0:
        if len(q): print(f'{heapq.heappop(q)[1]}\n')
        else: print('0\n')